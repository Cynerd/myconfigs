#!/bin/sh

cd `dirname $0`

git submodule update --init --recursive || (echo "Submodule update failed!"; exit 5)

# Source inst and diff function
. ./utils/inst

# Load if we force changes (implies no interaction)
[ "$1" = "-f" ] && FORCE=true || FORCE=false

#################################################################################
source private/install # private files, sorry but some privacy is required.

# TODO on hosts without shellrc we might want some thin shellrc to be installed
if ask "profile" "Install shell profile"; then
	inst profile ~/.profile
	inst zprofile ~/.zprofile
fi

if ask "git" "Install GIT configuration"; then
	inst gitconfig ~/.gitconfig
	inst local/git-prompt.sh ~/.local/
fi

if ask "gnuscreen" "Install configurations for various utility tools"; then
	inst screenrc ~/.screenrc
fi

if ask "services" "Install user services"; then
	inst local/sbin/user-service.sh ~/.local/sbin/user-service.sh
	inst service/ ~/.service/
fi

if ask "ssh" "Install SSH config"; then
	inst private/ssh_config ~/.ssh/config
fi

if ask "vim" "Install VIM scripts"; then
	inst vimrc ~/.vimrc
	inst vim/ ~/.vim
	inst local/bin/vim-project-gen ~/.local/bin/vim-project-gen
	mkdir -p ~/.cache/vim # directory for *.swp files
	mkdir -p ~/.cache/vim-undo # directory for undo files
	# Vim plugin manager
	[ -d ~/.vim/bundle/Vundle.vim ] || {
		mkdir -p ~/.vim/bundle
		git clone "https://github.com/VundleVim/Vundle.vim.git" ~/.vim/bundle/Vundle.vim
	}
	vim +PluginInstall +qall
fi

if ask "email-sync" "Install email synchronization"; then
	inst local/bin/email-unread ~/.local/bin/email-unread
	inst local/sbin/newmail-notify ~/.local/sbin/newmail-notify
	inst_email_sync
	# Contains:
	# inst local/sbin/syncemail ~/.local/sbin/
	# inst config/offlineimap/ ~/.config/offlineimap
fi

if ask "mutt" "Install mutt configuration"; then
	inst urlview ~/.urlview
	inst lynxrc ~/.lynxrc
	inst mutt/mailcap ~/.mutt/
	inst mutt/gpg.rc ~/.mutt/
	inst mutt/color ~/.mutt/
	inst_mutt_conf
	# Contains:
	# inst mutt/ ~/.mutt
	# inst msmtprc ~/.msmtprc
	mkdir -p ~/.cache/mutt # directory for temporaly html files
fi

if ask "desktop" "Install desktop generic"; then
	# Theme
	inst gtk-2.0/gtkrc ~/.gtkrc-2.0
	inst gtk-3.0/ ~/.config/gtk-3.0/
	inst config/Trolltech.conf ~/.config/Trolltech.conf
	# User directories
	inst config/user-dirs.dirs ~/.config/user-dirs.dirs
	# Generic i3/sway
	inst config/dunst/ ~/.config/dunst
	inst config/i3blocks/ ~/.config/i3blocks
fi

if ask "xorg" "Install XOrg (i3)"; then
	inst xinitrc ~/.xinitrc
	inst Xresources ~/.Xresources
	inst config/i3/ ~/.config/i3
	inst local/bin/mxrandr ~/.local/bin/
fi

if ask "wayland" "Install Wayland (sway)"; then
	inst Xresources ~/.Xdefaults # X resources for wayland session
	inst config/sway/ ~/.config/sway
	inst config/swaylock/ ~/.config/swaylock
fi

if ask "cal" "Install calendar and contacts"; then
	inst config/khal/config ~/.config/khal/config
	inst config/khard/khard.conf ~/.config/khard/khard.conf
	inst private/vdirsyncer/ ~/.vdirsyncer
fi

if ask "surf" "Install Surf configuration"; then
	inst surf/script.js ~/.surf/script.js
	inst surf/styles/default.css ~/.surf/styles/default.css
fi

if ask "mpd" "Install MPD configuration"; then
	inst config/mpd/ ~/.config/mpd
fi

if ask "wake-desktop" "Install wake-desktop"; then
	inst local/bin/wake-desktop ~/.local/bin/wake-desktop
fi

if ask "backup" "Install backup script"; then
	inst local/bin/system-backup ~/.local/bin/system-backup
fi
